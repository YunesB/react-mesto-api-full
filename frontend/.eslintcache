[{"D:\\web-dev\\dev\\mesto-react\\src\\components\\App.js":"1","D:\\web-dev\\dev\\mesto-react\\src\\utils\\Api.js":"2","D:\\web-dev\\dev\\mesto-react\\src\\components\\PopupWithForm.jsx":"3","D:\\web-dev\\dev\\mesto-react\\src\\reportWebVitals.js":"4","D:\\web-dev\\dev\\mesto-react\\src\\components\\Main.jsx":"5","D:\\web-dev\\dev\\mesto-react\\src\\components\\Header.jsx":"6","D:\\web-dev\\dev\\mesto-react\\src\\components\\Footer.jsx":"7","D:\\web-dev\\dev\\mesto-react\\src\\components\\ImagePopup.jsx":"8","D:\\web-dev\\dev\\mesto-react\\src\\utils\\api.js":"9","D:\\web-dev\\dev\\mesto-react\\src\\index.js":"10","D:\\web-dev\\dev\\mesto-react\\src\\components\\Card.jsx":"11","D:\\web-dev\\dev\\mesto-react\\src\\contexts\\CurrentUserContext.jsx":"12","D:\\web-dev\\dev\\react-mesto-auth\\src\\index.js":"13","D:\\web-dev\\dev\\react-mesto-auth\\src\\utils\\api.js":"14","D:\\web-dev\\dev\\react-mesto-auth\\src\\contexts\\CurrentUserContext.jsx":"15","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\App.js":"16","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\Header.jsx":"17","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\SignUp.jsx":"18","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\PopupWithForm.jsx":"19","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\AddPlacePopup.jsx":"20","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\ConfirmationPopup.jsx":"21","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\Authorization.jsx":"22","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\EditAvatarPopup.jsx":"23","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\InfoTooltip.jsx":"24","D:\\web-dev\\dev\\react-mesto-auth\\src\\utils\\Auth.jsx":"25","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\EditProfilePopup.jsx":"26","D:\\web-dev\\dev\\react-mesto-auth\\src\\reportWebVitals.js":"27","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\Main.jsx":"28","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\PageIsLoading.jsx":"29","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\Burger\\Burger.jsx":"30","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\ProtectedRoute.jsx":"31","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\Card.jsx":"32"},{"size":5153,"mtime":1606832342906,"results":"33","hashOfConfig":"34"},{"size":3555,"mtime":1606756858226,"results":"35","hashOfConfig":"34"},{"size":744,"mtime":1606832336960,"results":"36","hashOfConfig":"34"},{"size":375,"mtime":1606756858225,"results":"37","hashOfConfig":"34"},{"size":2371,"mtime":1606832074408,"results":"38","hashOfConfig":"34"},{"size":338,"mtime":1606831568056,"results":"39","hashOfConfig":"34"},{"size":194,"mtime":1606832038232,"results":"40","hashOfConfig":"34"},{"size":522,"mtime":1606832205167,"results":"41","hashOfConfig":"34"},{"size":3451,"mtime":1612705008792,"results":"42","hashOfConfig":"34"},{"size":528,"mtime":1606832070880,"results":"43","hashOfConfig":"34"},{"size":898,"mtime":1606756858215,"results":"44","hashOfConfig":"34"},{"size":86,"mtime":1612705008787,"results":"45","hashOfConfig":"34"},{"size":624,"mtime":1612705507338,"results":"46","hashOfConfig":"47"},{"size":3125,"mtime":1614164880670,"results":"48","hashOfConfig":"47"},{"size":86,"mtime":1614162275451,"results":"49","hashOfConfig":"47"},{"size":8887,"mtime":1614165689173,"results":"50","hashOfConfig":"47"},{"size":1460,"mtime":1613036156171,"results":"51","hashOfConfig":"47"},{"size":126,"mtime":1612706599460,"results":"52","hashOfConfig":"47"},{"size":771,"mtime":1612706600912,"results":"53","hashOfConfig":"47"},{"size":2052,"mtime":1612705007405,"results":"54","hashOfConfig":"47"},{"size":568,"mtime":1612705008771,"results":"55","hashOfConfig":"47"},{"size":1684,"mtime":1613036830577,"results":"56","hashOfConfig":"47"},{"size":1241,"mtime":1612705008773,"results":"57","hashOfConfig":"47"},{"size":786,"mtime":1612855160792,"results":"58","hashOfConfig":"47"},{"size":1094,"mtime":1614164875665,"results":"59","hashOfConfig":"47"},{"size":1971,"mtime":1613030736673,"results":"60","hashOfConfig":"47"},{"size":375,"mtime":1606756858225,"results":"61","hashOfConfig":"47"},{"size":2192,"mtime":1614158678269,"results":"62","hashOfConfig":"47"},{"size":392,"mtime":1612876895811,"results":"63","hashOfConfig":"47"},{"size":7291,"mtime":1612880846705,"results":"64","hashOfConfig":"47"},{"size":330,"mtime":1612879773737,"results":"65","hashOfConfig":"47"},{"size":1438,"mtime":1614163896210,"results":"66","hashOfConfig":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x85b0l",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"9qf7vl",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web-dev\\dev\\mesto-react\\src\\components\\App.js",[],"D:\\web-dev\\dev\\mesto-react\\src\\utils\\Api.js",[],"D:\\web-dev\\dev\\mesto-react\\src\\components\\PopupWithForm.jsx",[],"D:\\web-dev\\dev\\mesto-react\\src\\reportWebVitals.js",[],"D:\\web-dev\\dev\\mesto-react\\src\\components\\Main.jsx",[],"D:\\web-dev\\dev\\mesto-react\\src\\components\\Header.jsx",["137"],"D:\\web-dev\\dev\\mesto-react\\src\\components\\Footer.jsx",[],"D:\\web-dev\\dev\\mesto-react\\src\\components\\ImagePopup.jsx",[],"D:\\web-dev\\dev\\mesto-react\\src\\utils\\api.js",[],"D:\\web-dev\\dev\\mesto-react\\src\\index.js",[],["138","139"],"D:\\web-dev\\dev\\mesto-react\\src\\components\\Card.jsx",[],"D:\\web-dev\\dev\\mesto-react\\src\\contexts\\CurrentUserContext.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\index.js",[],["140","141"],"D:\\web-dev\\dev\\react-mesto-auth\\src\\utils\\api.js",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\contexts\\CurrentUserContext.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\App.js",["142"],"/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { Route, Switch, Redirect, withRouter, useHistory } from 'react-router-dom';\r\n\r\nimport Header from './Header.jsx';\r\nimport Main from './Main.jsx';\r\nimport Authorization from './Authorization.jsx';\r\n\r\nimport ProtectedRoute from './ProtectedRoute.jsx';\r\nimport * as auth from '../utils/Auth.jsx';\r\n\r\nimport ConfirmationPopup from './ConfirmationPopup.jsx';\r\nimport EditProfilePopup from './EditProfilePopup.jsx';\r\nimport EditAvatarPopup from './EditAvatarPopup.jsx';\r\nimport AddPlacePopup from './AddPlacePopup.jsx';\r\nimport ImagePopup from './ImagePopup';\r\nimport PageIsLoading from './PageIsLoading';\r\nimport InfoTooltip from './InfoTooltip.jsx';\r\n\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.jsx';\r\nimport { api } from '../utils/api.js';\r\n\r\nfunction App() {\r\n  const [isPageLoading, setIsPageLoading] = React.useState(true);\r\n  const [isTooltipOpen, setTooltipOpen] = React.useState(false);\r\n  const [isResAdjustments, setResAdjustments] = React.useState(false);\r\n\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddCardPopupOpen, setAddCardPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCardOpen] = React.useState();\r\n  const [isConfirmationPopupOpen, setConfirmationPopupOpen] = React.useState(false);\r\n  const [isLoggedIn, setLoggedIn] = React.useState(false);\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  let [currentCard, setCurrentCard] = React.useState({});\r\n  let [isLoggedInUser, setLoggedInUser] = React.useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    tokenCheck()\r\n    Promise.all([\r\n      api.getUserInfo(),\r\n      api.getInitialCards()])\r\n      .then(([userData, cards]) => {\r\n        setCurrentUser(userData);\r\n        setCards(cards);\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => {\r\n        setIsPageLoading(false);\r\n        console.log('success!')\r\n      })\r\n  }, []);\r\n\r\n  function handleUpdateUser(user) {\r\n    setIsPageLoading(true);\r\n    api.setUserInfo(user)\r\n      .then((user) => {\r\n        console.log(user);\r\n        setCurrentUser(user)\r\n      })\r\n      .catch((err) =>\r\n        console.log(err))\r\n      .finally(() =>\r\n        closeAllPopups());\r\n  }\r\n\r\n  function handleUpdateAvatar(user) {\r\n    setIsPageLoading(true);\r\n    api.setUserAva(user)\r\n      .then((user) =>\r\n        setCurrentUser(user))\r\n      .catch((err) =>\r\n        console.log(err))\r\n      .finally(() =>\r\n        closeAllPopups());\r\n  }\r\n\r\n  function handleAddCardSubmit(data) {\r\n    setIsPageLoading(true);\r\n    api.addCard(data)\r\n      .then((data) => {\r\n        setCards([data, ...cards])\r\n      })\r\n      .catch((err) =>\r\n        console.log(err))\r\n      .finally(() =>\r\n        closeAllPopups());\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i === currentUser._id);\r\n    api.changeLikeCardStatus(card, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) =>\r\n        console.log(err));\r\n  }\r\n\r\n  function handleDeletePopup(card) {\r\n    setIsPageLoading(true);\r\n    currentCard = card;\r\n    api.deleteCard(card._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((c) => c._id !== card._id);\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => closeAllPopups());\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    setConfirmationPopupOpen(true);\r\n    setCurrentCard(card);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddCardClick() {\r\n    setAddCardPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(id) {\r\n    setSelectedCardOpen(id);\r\n  }\r\n\r\n  function handleTooltipOpen() {\r\n    setTooltipOpen(true);\r\n  }\r\n\r\n  function handleResAdjustments() {\r\n    setResAdjustments(true);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setEditAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setAddCardPopupOpen(false);\r\n    setIsPageLoading(false);\r\n    setConfirmationPopupOpen(false);\r\n    setSelectedCardOpen();\r\n  }\r\n\r\n  function closeTooltipPopup() {\r\n    setTooltipOpen(false);\r\n  }\r\n\r\n  function handleLogin(email, password) {\r\n    if (!email || !password) {\r\n      handleTooltipOpen();\r\n      return;\r\n    }\r\n    auth.signIn(email, password)\r\n      .then((data) => {\r\n        if (data.token) {\r\n          setIsPageLoading(true);\r\n          localStorage.setItem('jwt', data.token);\r\n          window.location.reload();\r\n          tokenCheck();\r\n        } else {\r\n          return\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setResAdjustments(false);\r\n        handleTooltipOpen();\r\n      })\r\n      .finally(() => {\r\n        closeAllPopups(true);\r\n      })\r\n  }\r\n\r\n  function handleRegistration(email, password) {\r\n    setIsPageLoading(true);\r\n    auth.signUp(email, password)\r\n      .then((res) => {\r\n        if (res) {\r\n          handleResAdjustments();\r\n          handleTooltipOpen();\r\n          history.push('/sign-in');\r\n          closeAllPopups(true);\r\n        } else {\r\n          handleTooltipOpen();\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setIsPageLoading(true);\r\n        setResAdjustments(false);\r\n        handleTooltipOpen();\r\n      })\r\n      .finally(() => {\r\n        closeAllPopups(true);\r\n      })\r\n  }\r\n\r\n  function tokenCheck() {\r\n    let jwt = localStorage.getItem('jwt');\r\n    if (jwt) {\r\n      auth.checkTokenValidity(jwt)\r\n        .then((res) => {\r\n          if (res) {\r\n            setLoggedIn(true);\r\n            setLoggedInUser(res.email);\r\n            history.push('/');\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  function signOut() {\r\n    localStorage.removeItem('jwt');\r\n    setLoggedInUser(false);\r\n    history.push('/sign-in');\r\n  };\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header\r\n          signOut={signOut}\r\n          email={isLoggedInUser}\r\n        />\r\n        <Switch>\r\n          <ProtectedRoute exact path=\"/\" loggedIn={isLoggedIn}\r\n            component={Main}\r\n            onEditProfile={handleEditProfileClick}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onAddPlace={handleAddCardClick}\r\n            onCardClick={handleCardClick}\r\n            onLikeClick={handleCardLike}\r\n            onDeleteClick={handleCardDelete}\r\n            cards={cards}\r\n            text=\"&copy; 2020 Mesto Russia\"\r\n          />\r\n          <Route path=\"/sign-up\">\r\n            <Authorization\r\n              heading=\"Регистрация\"\r\n              buttonName=\"Зарегистрироваться\"\r\n              subline=\"Уже зарегистрированы? Войти\"\r\n              submit=\"Registration\"\r\n              handleSubmit={handleRegistration}\r\n            />\r\n          </Route>\r\n          <Route path=\"/sign-in\">\r\n            <Authorization\r\n              heading=\"Войти\"\r\n              buttonName=\"Войти\"\r\n              subline=\"\"\r\n              submit=\"Login\"\r\n              handleSubmit={handleLogin}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            {isLoggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-up\" />}\r\n          </Route>\r\n          <Route render={() => <Redirect to={{ pathname: \"/\" }} />} />\r\n        </Switch>\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <AddPlacePopup\r\n          isOpen={isAddCardPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onCreateCard={handleAddCardSubmit}\r\n        />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateAvatar}\r\n        />\r\n        <ImagePopup\r\n          isOpen={selectedCard ? 'popup_opened' : ''}\r\n          card={selectedCard || ''}\r\n          onClose={closeAllPopups}\r\n        />\r\n        <ConfirmationPopup\r\n          isOpen={isConfirmationPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onConfirm={handleDeletePopup}\r\n          card={currentCard}\r\n        />\r\n        <PageIsLoading\r\n          isOpen={isPageLoading}\r\n        />\r\n        <InfoTooltip\r\n          isOpen={isTooltipOpen}\r\n          onClose={closeTooltipPopup}\r\n          resAdjust={isResAdjustments}\r\n        />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\Header.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\SignUp.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\PopupWithForm.jsx",[],["143","144"],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\AddPlacePopup.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\ConfirmationPopup.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\Authorization.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\EditAvatarPopup.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\InfoTooltip.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\utils\\Auth.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\EditProfilePopup.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\reportWebVitals.js",[],["145","146"],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\Main.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\PageIsLoading.jsx",["147"],"import loading from '../images/loading.svg'\r\n\r\nfunction PageIsLoading(props) {\r\n    return (\r\n        <div className={`popup ${props.isOpen ? ' popup_opened ' : \" \"}`}>\r\n            <div className=\"popup__img-container popup__img-container_loader\">\r\n                <img src={loading} className=\"popup__image\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageIsLoading;","D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\Burger\\Burger.jsx",["148","149","150"],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\ProtectedRoute.jsx",[],"D:\\web-dev\\dev\\react-mesto-auth\\src\\components\\Card.jsx",[],{"ruleId":"151","severity":1,"message":"152","line":6,"column":11,"nodeType":"153","endLine":6,"endColumn":48},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"154","replacedBy":"158"},{"ruleId":"156","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":57,"column":6,"nodeType":"162","endLine":57,"endColumn":8,"suggestions":"163"},{"ruleId":"154","replacedBy":"164"},{"ruleId":"156","replacedBy":"165"},{"ruleId":"154","replacedBy":"166"},{"ruleId":"156","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":7,"column":17,"nodeType":"153","endLine":7,"endColumn":63},{"ruleId":"170","severity":1,"message":"171","line":69,"column":7,"nodeType":"172","messageId":"173","endLine":69,"endColumn":15},{"ruleId":"170","severity":1,"message":"174","line":127,"column":7,"nodeType":"172","messageId":"173","endLine":127,"endColumn":11},{"ruleId":"170","severity":1,"message":"175","line":174,"column":7,"nodeType":"172","messageId":"173","endLine":174,"endColumn":17},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["176"],"no-negated-in-lhs",["177"],["176"],["177"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["178"],["176"],["177"],["176"],["177"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'MenuButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},"Update the dependencies array to be: [tokenCheck]",{"range":"181","text":"182"},[2166,2168],"[tokenCheck]"]